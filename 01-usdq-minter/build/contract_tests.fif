"Asm.fif" include
// automatically generated from `C:\Users\Tigr\AppData\Local\toncli\toncli\func-libs\stdlib-tests.func` `C:\Users\Tigr\AppData\Local\toncli\toncli\func-libs\tests-helpers.func` `D:\TON_FunC\qubedao-repo\01-usdq-minter\tests\tests.fc` incl:`func/stdlib-ext.fc` incl:`func/usdq-as-jetton-wallet-code.fc` incl:`func/usdq-as-jetton.fc` 
PROGRAM{
  85860 DECLMETHOD get_c7
  97986 DECLMETHOD swap_remove
  80537 DECLMETHOD parse_one_action
  71217 DECLMETHOD get_usdq_wallet_code
  120686 DECLMETHOD get_usdq_jetton_content
  73706 DECLMETHOD get_usdq_wallet_data
  130065 DECLMETHOD get_usdq_wallet_state_init
  92542 DECLMETHOD get_usdq_wallet_addr
  78362 DECLMETHOD get_usdq_wallet_addr_from_addr
  127004 DECLMETHOD build_usdq_wallet_master_msg_incoming
  95602 DECLMETHOD build_usdq_wallet_msg_body_incoming
  0 DECLMETHOD i_init_contract
  1 DECLMETHOD c_init_contract
  2 DECLMETHOD i_empty_msg
  3 DECLMETHOD c_empty_msg
  4 DECLMETHOD i_donation
  5 DECLMETHOD c_donation
  6 DECLMETHOD i_no_return_no_ton
  7 DECLMETHOD c_no_return_no_ton
  8 DECLMETHOD i_put_ton
  9 DECLMETHOD c_put_ton
  10 DECLMETHOD i_full_return_ton
  11 DECLMETHOD c_full_return_ton
  12 DECLMETHOD i_put_ton_2
  13 DECLMETHOD c_put_ton_2
  14 DECLMETHOD i_lend_usdq
  15 DECLMETHOD c_lend_usdq
  16 DECLMETHOD i_no_return_ton_when_lending
  17 DECLMETHOD c_no_return_ton_when_lending
  18 DECLMETHOD i_no_increase_lending
  19 DECLMETHOD c_no_increase_lending
  20 DECLMETHOD i_return_usdq
  21 DECLMETHOD c_return_usdq
  22 DECLMETHOD i_return_ton_after_lending
  23 DECLMETHOD c_return_ton_after_lending
  24 DECLMETHOD i_get_wallet_code
  25 DECLMETHOD c_get_wallet_code
  26 DECLMETHOD i_get_wallet_addr
  27 DECLMETHOD c_get_wallet_addr
  get_c7 PROC:<{
    // 
    124711402 PUSHINT	//  _2=124711402
    0 PUSHINT	//  _2=124711402 _3=0
    DUP	//  _2=124711402 _3=0 _4=0
    NOW	//  _2=124711402 _3=0 _4=0 _5
    1 PUSHINT	//  _2=124711402 _3=0 _4=0 _5 _6=1
    DUP	//  _2=124711402 _3=0 _4=0 _5 _6=1 _7=1
    239 PUSHINT	//  _2=124711402 _3=0 _4=0 _5 _6=1 _7=1 _8=239
    1000000000 PUSHINT	//  _2=124711402 _3=0 _4=0 _5 _6=1 _7=1 _8=239 _10=1000000000
    PUSHNULL	//  _2=124711402 _3=0 _4=0 _5 _6=1 _7=1 _8=239 _10=1000000000 _11
    PAIR	//  _2=124711402 _3=0 _4=0 _5 _6=1 _7=1 _8=239 _12
    MYADDR	//  _2=124711402 _3=0 _4=0 _5 _6=1 _7=1 _8=239 _12 _13
    CONFIGROOT	//  _2=124711402 _3=0 _4=0 _5 _6=1 _7=1 _8=239 _12 _13 _14
    10 TUPLE	//  _15
    SINGLE	//  _16
  }>
  swap_remove PROC:<{
    //  t index
    OVER	//  t index t
    TLEN	//  t index _3
    DEC	//  t index l
    s1 s(-1) PUXC	//  t index index l
    EQUAL	//  t index _6
    IFJMP:<{	//  t index
      DROP	//  t
      TPOP	//  t value
    }>	//  t index
    2DUP	//  t index t index
    INDEXVAR	//  t index value
    s0 s2 XCHG	//  value index t
    TPOP	//  value index t _12
    s1 s2 XCHG	//  value t index _12
    SETINDEXVAR	//  value t
    SWAP	//  t value
  }>
  parse_one_action PROC:<{
    //  actions
    LDREF	//  previous actions
    32 LDU	//  previous action_id actions
    SWAP	//  previous actions action_id
    s0 DUMP	//  previous actions action_id
    DUP
    247711853 PUSHINT	//  previous actions action_id action_id _10=247711853
    EQUAL	//  previous actions action_id _11
    IF:<{	//  previous actions action_id
      DROP	//  previous actions
      4445 PUSHINT	//  previous actions _12=4445
      s0 DUMP	//  previous actions _13
      DROP	//  previous actions
      1397050948 PUSHINT	//  previous actions _14=1397050948
      s0 DUMP	//  previous actions _15
      DROP	//  previous actions
      8 LDU	//  previous _16 actions
      SWAP	//  previous actions _16
      s0 DUMP	//  previous actions _19
      DROP	//  previous actions
      LDREF	//  previous _55 _54
      DROP	//  previous _20
      s0 DUMP	//  previous _22
      DROP	//  previous
    }>ELSE<{	//  previous actions action_id
      DUP
      2907562126 PUSHINT	//  previous actions action_id action_id _23=2907562126
      EQUAL	//  previous actions action_id _24
      IF:<{	//  previous actions action_id
        DROP	//  previous actions
        4445 PUSHINT	//  previous actions _25=4445
        s0 DUMP	//  previous actions _26
        DROP	//  previous actions
        23438651275822149 PUSHINT	//  previous actions _27=23438651275822149
        s0 DUMP	//  previous actions _28
        DROP	//  previous actions
        LDREF	//  previous _57 _56
        DROP	//  previous _29
        s0 DUMP	//  previous _31
        DROP	//  previous
      }>ELSE<{	//  previous actions action_id
        921090057 PUSHINT	//  previous actions action_id _32=921090057
        EQUAL	//  previous actions _33
        IF:<{	//  previous actions
          4445 PUSHINT	//  previous actions _34=4445
          s0 DUMP	//  previous actions _35
          DROP	//  previous actions
          23157172037899845 PUSHINT	//  previous actions _36=23157172037899845
          s0 DUMP	//  previous actions _37
          DROP	//  previous actions
          8 LDU	//  previous _38 actions
          SWAP	//  previous actions _38
          s0 DUMP	//  previous actions _41
          DROP	//  previous actions
          LDDICT	//  previous _61 _60
          DROP	//  previous _42
          s0 DUMP	//  previous _44
          DROP	//  previous
        }>ELSE<{	//  previous actions
          DROP	//  previous
          100 THROW
        }>
      }>
    }>
    CTOS	//  _47
  }>
  get_usdq_wallet_code PROC:<{
    // 
    1204221081368542827431947 PUSHINT	//  _3
    NEWC	//  _3 _4
    80 STU	//  b1
    24 PUSHINT	//  b1 _10
    NEWC	//  b1 _10 _11
    6 STU	//  b1 b2
    205 PUSHINT	//  b1 b2 _17
    NEWC	//  b1 b2 _17 _18
    8 STU	//  b1 b2 b3
    0 PUSHINT	//  b1 b2 b3 _24
    NEWC	//  b1 b2 b3 _24 _25
    2 STU	//  b1 b2 b3 b4
    0 PUSHINT	//  b1 b2 b3 b4 _31
    NEWC	//  b1 b2 b3 b4 _31 _32
    2 STU	//  b1 b2 b3 b4 b5
    1768440679951816746788985377232864336482708686729131098922756 PUSHINT	//  b1 b2 b3 b4 b5 _38
    474388085589262663637939755339504656766969588653096504443109323008358343505 PUSHINT	//  b1 b2 b3 b4 b5 _38 _39=474388085589262663637939755339504656766969588653096504443109323008358343505
    3713598076943776617372012166755086454743508288999248432063926776415345708157 PUSHINT	//  b1 b2 b3 b4 b5 _38 _39=474388085589262663637939755339504656766969588653096504443109323008358343505 _40=3713598076943776617372012166755086454743508288999248432063926776415345708157
    NEWC	//  b1 b2 b3 b4 b5 _38 _39=474388085589262663637939755339504656766969588653096504443109323008358343505 _40=3713598076943776617372012166755086454743508288999248432063926776415345708157 _41
    256 STU	//  b1 b2 b3 b4 b5 _38 _39=474388085589262663637939755339504656766969588653096504443109323008358343505 _43
    256 STU	//  b1 b2 b3 b4 b5 _38 _45
    202 STU	//  b1 b2 b3 b4 b5 b6
    ENDC	//  b1 b2 b3 b4 b5 _48
    SWAP	//  b1 b2 b3 b4 _48 b5
    STREF	//  b1 b2 b3 b4 b5
    286840395106943248332018736 PUSHINT	//  b1 b2 b3 b4 b5 _53
    NEWC	//  b1 b2 b3 b4 b5 _53 _54
    90 STU	//  b1 b2 b3 b4 b5 b7
    ENDC	//  b1 b2 b3 b4 b5 _57
    SWAP	//  b1 b2 b3 b4 _57 b5
    STREF	//  b1 b2 b3 b4 b5
    ENDC	//  b1 b2 b3 b4 _59
    SWAP	//  b1 b2 b3 _59 b4
    STREF	//  b1 b2 b3 b4
    65863142453806894349544446227258624274189975603069452142800727363 PUSHINT	//  b1 b2 b3 b4 _64
    36022583215402421593011100142372347800306584632647209243536935656885792106506 PUSHINT	//  b1 b2 b3 b4 _64 _65=36022583215402421593011100142372347800306584632647209243536935656885792106506
    27373763721312709193723342817871411470548375373454213157540027864160500760560 PUSHINT	//  b1 b2 b3 b4 _64 _65=36022583215402421593011100142372347800306584632647209243536935656885792106506 _66=27373763721312709193723342817871411470548375373454213157540027864160500760560
    36293164438319279897193734048255927429703774868638808287025597159227288535346 PUSHINT	//  b1 b2 b3 b4 _64 _65=36022583215402421593011100142372347800306584632647209243536935656885792106506 _66=27373763721312709193723342817871411470548375373454213157540027864160500760560 _67=36293164438319279897193734048255927429703774868638808287025597159227288535346
    NEWC	//  b1 b2 b3 b4 _64 _65=36022583215402421593011100142372347800306584632647209243536935656885792106506 _66=27373763721312709193723342817871411470548375373454213157540027864160500760560 _67=36293164438319279897193734048255927429703774868638808287025597159227288535346 _68
    256 STU	//  b1 b2 b3 b4 _64 _65=36022583215402421593011100142372347800306584632647209243536935656885792106506 _66=27373763721312709193723342817871411470548375373454213157540027864160500760560 _70
    256 STU	//  b1 b2 b3 b4 _64 _65=36022583215402421593011100142372347800306584632647209243536935656885792106506 _72
    256 STU	//  b1 b2 b3 b4 _64 _74
    220 STU	//  b1 b2 b3 b4 b8
    2837239951521285648543060 PUSHINT	//  b1 b2 b3 b4 b8 _80
    98055536315304533079511538323522743496187160145746862821000526869695768298746 PUSHINT	//  b1 b2 b3 b4 b8 _80 _81=98055536315304533079511538323522743496187160145746862821000526869695768298746
    NEWC	//  b1 b2 b3 b4 b8 _80 _81=98055536315304533079511538323522743496187160145746862821000526869695768298746 _82
    256 STU	//  b1 b2 b3 b4 b8 _80 _84
    88 STU	//  b1 b2 b3 b4 b8 b9
    ENDC	//  b1 b2 b3 b4 b8 _87
    SWAP	//  b1 b2 b3 b4 _87 b8
    STREF	//  b1 b2 b3 b4 b8
    ENDC	//  b1 b2 b3 b4 _89
    SWAP	//  b1 b2 b3 _89 b4
    STREF	//  b1 b2 b3 b4
    ENDC	//  b1 b2 b3 _91
    SWAP	//  b1 b2 _91 b3
    STREF	//  b1 b2 b3
    0 PUSHINT	//  b1 b2 b3 _96
    NEWC	//  b1 b2 b3 _96 _97
    2 STU	//  b1 b2 b3 b10
    0 PUSHINT	//  b1 b2 b3 b10 _103
    NEWC	//  b1 b2 b3 b10 _103 _104
    2 STU	//  b1 b2 b3 b10 b11
    5384451206639154132487420426665891536062686866748673283 PUSHINT	//  b1 b2 b3 b10 b11 _110
    56412072603631189131879129507379125436402733260684039578857651819644964835908 PUSHINT	//  b1 b2 b3 b10 b11 _110 _111=56412072603631189131879129507379125436402733260684039578857651819644964835908
    23416910694254422157143782468847592266632279607868338729456880423444947224364 PUSHINT	//  b1 b2 b3 b10 b11 _110 _111=56412072603631189131879129507379125436402733260684039578857651819644964835908 _112=23416910694254422157143782468847592266632279607868338729456880423444947224364
    27139227854076437901905259503674178365365924610259309998543734221547604181142 PUSHINT	//  b1 b2 b3 b10 b11 _110 _111=56412072603631189131879129507379125436402733260684039578857651819644964835908 _112=23416910694254422157143782468847592266632279607868338729456880423444947224364 _113=27139227854076437901905259503674178365365924610259309998543734221547604181142
    NEWC	//  b1 b2 b3 b10 b11 _110 _111=56412072603631189131879129507379125436402733260684039578857651819644964835908 _112=23416910694254422157143782468847592266632279607868338729456880423444947224364 _113=27139227854076437901905259503674178365365924610259309998543734221547604181142 _114
    256 STU	//  b1 b2 b3 b10 b11 _110 _111=56412072603631189131879129507379125436402733260684039578857651819644964835908 _112=23416910694254422157143782468847592266632279607868338729456880423444947224364 _116
    256 STU	//  b1 b2 b3 b10 b11 _110 _111=56412072603631189131879129507379125436402733260684039578857651819644964835908 _118
    256 STU	//  b1 b2 b3 b10 b11 _110 _120
    186 STU	//  b1 b2 b3 b10 b11 b12
    411551011557230023194491375645770678860975903747126595619 PUSHINT	//  b1 b2 b3 b10 b11 b12 _126
    37304547022129019144362492844277410312796138246506582838897011168558795288960 PUSHINT	//  b1 b2 b3 b10 b11 b12 _126 _127=37304547022129019144362492844277410312796138246506582838897011168558795288960
    NEWC	//  b1 b2 b3 b10 b11 b12 _126 _127=37304547022129019144362492844277410312796138246506582838897011168558795288960 _128
    256 STU	//  b1 b2 b3 b10 b11 b12 _126 _130
    192 STU	//  b1 b2 b3 b10 b11 b12 b13
    ENDC	//  b1 b2 b3 b10 b11 b12 _133
    SWAP	//  b1 b2 b3 b10 b11 _133 b12
    STREF	//  b1 b2 b3 b10 b11 b12
    0 PUSHINT	//  b1 b2 b3 b10 b11 b12 _138
    58830411301347406957768801130457948425498167343084405895381307716712459236091 PUSHINT	//  b1 b2 b3 b10 b11 b12 _138 _139=58830411301347406957768801130457948425498167343084405895381307716712459236091
    NEWC	//  b1 b2 b3 b10 b11 b12 _138 _139=58830411301347406957768801130457948425498167343084405895381307716712459236091 _140
    256 STU	//  b1 b2 b3 b10 b11 b12 _138 _142
    8 STU	//  b1 b2 b3 b10 b11 b12 b14
    ENDC	//  b1 b2 b3 b10 b11 b12 _145
    SWAP	//  b1 b2 b3 b10 b11 _145 b12
    STREF	//  b1 b2 b3 b10 b11 b12
    1040082358761997411685153886966508884 PUSHINT	//  b1 b2 b3 b10 b11 b12 _150
    NEWC	//  b1 b2 b3 b10 b11 b12 _150 _151
    120 STU	//  b1 b2 b3 b10 b11 b12 b15
    ENDC	//  b1 b2 b3 b10 b11 b12 _154
    SWAP	//  b1 b2 b3 b10 b11 _154 b12
    STREF	//  b1 b2 b3 b10 b11 b12
    ENDC	//  b1 b2 b3 b10 b11 _156
    SWAP	//  b1 b2 b3 b10 _156 b11
    STREF	//  b1 b2 b3 b10 b11
    12025720148 PUSHINT	//  b1 b2 b3 b10 b11 _161
    43432981002052302420001024199157575428021903434943071654127457801028996461509 PUSHINT	//  b1 b2 b3 b10 b11 _161 _162=43432981002052302420001024199157575428021903434943071654127457801028996461509
    57906038500622613239570130233781085706413501943924846822807989732468838478428 PUSHINT	//  b1 b2 b3 b10 b11 _161 _162=43432981002052302420001024199157575428021903434943071654127457801028996461509 _163=57906038500622613239570130233781085706413501943924846822807989732468838478428
    27139226128639851469364976448230105721318766107091933609965068896148379770922 PUSHINT	//  b1 b2 b3 b10 b11 _161 _162=43432981002052302420001024199157575428021903434943071654127457801028996461509 _163=57906038500622613239570130233781085706413501943924846822807989732468838478428 _164=27139226128639851469364976448230105721318766107091933609965068896148379770922
    NEWC	//  b1 b2 b3 b10 b11 _161 _162=43432981002052302420001024199157575428021903434943071654127457801028996461509 _163=57906038500622613239570130233781085706413501943924846822807989732468838478428 _164=27139226128639851469364976448230105721318766107091933609965068896148379770922 _165
    256 STU	//  b1 b2 b3 b10 b11 _161 _162=43432981002052302420001024199157575428021903434943071654127457801028996461509 _163=57906038500622613239570130233781085706413501943924846822807989732468838478428 _167
    256 STU	//  b1 b2 b3 b10 b11 _161 _162=43432981002052302420001024199157575428021903434943071654127457801028996461509 _169
    256 STU	//  b1 b2 b3 b10 b11 _161 _171
    34 STU	//  b1 b2 b3 b10 b11 b16
    ENDC	//  b1 b2 b3 b10 b11 _174
    SWAP	//  b1 b2 b3 b10 _174 b11
    STREF	//  b1 b2 b3 b10 b11
    ENDC	//  b1 b2 b3 b10 _176
    SWAP	//  b1 b2 b3 _176 b10
    STREF	//  b1 b2 b3 b10
    4687283202589780233404645549043806127090456722890419540 PUSHINT	//  b1 b2 b3 b10 _181
    32570151591335767983722473519926968278850051843800502119601001183354889117600 PUSHINT	//  b1 b2 b3 b10 _181 _182=32570151591335767983722473519926968278850051843800502119601001183354889117600
    NEWC	//  b1 b2 b3 b10 _181 _182=32570151591335767983722473519926968278850051843800502119601001183354889117600 _183
    256 STU	//  b1 b2 b3 b10 _181 _185
    188 STU	//  b1 b2 b3 b10 b17
    ENDC	//  b1 b2 b3 b10 _188
    SWAP	//  b1 b2 b3 _188 b10
    STREF	//  b1 b2 b3 b10
    ENDC	//  b1 b2 b3 _190
    SWAP	//  b1 b2 _190 b3
    STREF	//  b1 b2 b3
    ENDC	//  b1 b2 _192
    SWAP	//  b1 _192 b2
    STREF	//  b1 b2
    0 PUSHINT	//  b1 b2 _197
    NEWC	//  b1 b2 _197 _198
    2 STU	//  b1 b2 b18
    0 PUSHINT	//  b1 b2 b18 _204
    NEWC	//  b1 b2 b18 _204 _205
    2 STU	//  b1 b2 b18 b19
    0 PUSHINT	//  b1 b2 b18 b19 _211
    NEWC	//  b1 b2 b18 b19 _211 _212
    2 STU	//  b1 b2 b18 b19 b20
    7642630633149305909214709831819513033 PUSHINT	//  b1 b2 b18 b19 b20 _218
    NEWC	//  b1 b2 b18 b19 b20 _218 _219
    123 STU	//  b1 b2 b18 b19 b20 b21
    ENDC	//  b1 b2 b18 b19 b20 _222
    SWAP	//  b1 b2 b18 b19 _222 b20
    STREF	//  b1 b2 b18 b19 b20
    5 PUSHINT	//  b1 b2 b18 b19 b20 _227
    NEWC	//  b1 b2 b18 b19 b20 _227 _228
    4 STU	//  b1 b2 b18 b19 b20 b22
    1054118881410426531726456731443317759 PUSHINT	//  b1 b2 b18 b19 b20 b22 _234
    78273544013025670910797073272883645868226331314487268151345245764720710171492 PUSHINT	//  b1 b2 b18 b19 b20 b22 _234 _235=78273544013025670910797073272883645868226331314487268151345245764720710171492
    NEWC	//  b1 b2 b18 b19 b20 b22 _234 _235=78273544013025670910797073272883645868226331314487268151345245764720710171492 _236
    256 STU	//  b1 b2 b18 b19 b20 b22 _234 _238
    121 STU	//  b1 b2 b18 b19 b20 b22 b23
    ENDC	//  b1 b2 b18 b19 b20 b22 _241
    SWAP	//  b1 b2 b18 b19 b20 _241 b22
    STREF	//  b1 b2 b18 b19 b20 b22
    54154121160363472 PUSHINT	//  b1 b2 b18 b19 b20 b22 _246
    61823739175827512806369435955023700606475810542281642140588992949322861123705 PUSHINT	//  b1 b2 b18 b19 b20 b22 _246 _247=61823739175827512806369435955023700606475810542281642140588992949322861123705
    115368213338201613169772843494385187026005479330249935964821166850483776065344 PUSHINT	//  b1 b2 b18 b19 b20 b22 _246 _247=61823739175827512806369435955023700606475810542281642140588992949322861123705 _248=115368213338201613169772843494385187026005479330249935964821166850483776065344
    78386021036380515164848266221266747781768398452308470474543341779255855974574 PUSHINT	//  b1 b2 b18 b19 b20 b22 _246 _247=61823739175827512806369435955023700606475810542281642140588992949322861123705 _248=115368213338201613169772843494385187026005479330249935964821166850483776065344 _249=78386021036380515164848266221266747781768398452308470474543341779255855974574
    NEWC	//  b1 b2 b18 b19 b20 b22 _246 _247=61823739175827512806369435955023700606475810542281642140588992949322861123705 _248=115368213338201613169772843494385187026005479330249935964821166850483776065344 _249=78386021036380515164848266221266747781768398452308470474543341779255855974574 _250
    256 STU	//  b1 b2 b18 b19 b20 b22 _246 _247=61823739175827512806369435955023700606475810542281642140588992949322861123705 _248=115368213338201613169772843494385187026005479330249935964821166850483776065344 _252
    256 STU	//  b1 b2 b18 b19 b20 b22 _246 _247=61823739175827512806369435955023700606475810542281642140588992949322861123705 _254
    256 STU	//  b1 b2 b18 b19 b20 b22 _246 _256
    57 STU	//  b1 b2 b18 b19 b20 b22 b24
    19953458710987158860690608046254840290393729621833798524797329456 PUSHINT	//  b1 b2 b18 b19 b20 b22 b24 _262
    NEWC	//  b1 b2 b18 b19 b20 b22 b24 _262 _263
    216 STU	//  b1 b2 b18 b19 b20 b22 b24 b25
    ENDC	//  b1 b2 b18 b19 b20 b22 b24 _266
    SWAP	//  b1 b2 b18 b19 b20 b22 _266 b24
    STREF	//  b1 b2 b18 b19 b20 b22 b24
    ENDC	//  b1 b2 b18 b19 b20 b22 _268
    SWAP	//  b1 b2 b18 b19 b20 _268 b22
    STREF	//  b1 b2 b18 b19 b20 b22
    ENDC	//  b1 b2 b18 b19 b20 _270
    SWAP	//  b1 b2 b18 b19 _270 b20
    STREF	//  b1 b2 b18 b19 b20
    ENDC	//  b1 b2 b18 b19 _272
    SWAP	//  b1 b2 b18 _272 b19
    STREF	//  b1 b2 b18 b19
    5 PUSHINT	//  b1 b2 b18 b19 _277
    NEWC	//  b1 b2 b18 b19 _277 _278
    4 STU	//  b1 b2 b18 b19 b26
    862563720838230510494469119 PUSHINT	//  b1 b2 b18 b19 b26 _284
    NEWC	//  b1 b2 b18 b19 b26 _284 _285
    90 STU	//  b1 b2 b18 b19 b26 b27
    ENDC	//  b1 b2 b18 b19 b26 _288
    SWAP	//  b1 b2 b18 b19 _288 b26
    STREF	//  b1 b2 b18 b19 b26
    0 PUSHINT	//  b1 b2 b18 b19 b26 _293
    NEWC	//  b1 b2 b18 b19 b26 _293 _294
    2 STU	//  b1 b2 b18 b19 b26 b28
    2411796606167743417177790176638250702228855326290861459718037698720681750 PUSHINT	//  b1 b2 b18 b19 b26 b28 _300
    NEWC	//  b1 b2 b18 b19 b26 b28 _300 _301
    241 STU	//  b1 b2 b18 b19 b26 b28 b29
    ENDC	//  b1 b2 b18 b19 b26 b28 _304
    SWAP	//  b1 b2 b18 b19 b26 _304 b28
    STREF	//  b1 b2 b18 b19 b26 b28
    0 PUSHINT	//  b1 b2 b18 b19 b26 b28 _309
    NEWC	//  b1 b2 b18 b19 b26 b28 _309 _310
    2 STU	//  b1 b2 b18 b19 b26 b28 b30
    2869096449 PUSHINT	//  b1 b2 b18 b19 b26 b28 b30 _316
    NEWC	//  b1 b2 b18 b19 b26 b28 b30 _316 _317
    32 STU	//  b1 b2 b18 b19 b26 b28 b30 b31
    ENDC	//  b1 b2 b18 b19 b26 b28 b30 _320
    SWAP	//  b1 b2 b18 b19 b26 b28 _320 b30
    STREF	//  b1 b2 b18 b19 b26 b28 b30
    4186981889360840029030140437328917705098006501320760984833 PUSHINT	//  b1 b2 b18 b19 b26 b28 b30 _325
    NEWC	//  b1 b2 b18 b19 b26 b28 b30 _325 _326
    192 STU	//  b1 b2 b18 b19 b26 b28 b30 b32
    ENDC	//  b1 b2 b18 b19 b26 b28 b30 _329
    SWAP	//  b1 b2 b18 b19 b26 b28 _329 b30
    STREF	//  b1 b2 b18 b19 b26 b28 b30
    ENDC	//  b1 b2 b18 b19 b26 b28 _331
    SWAP	//  b1 b2 b18 b19 b26 _331 b28
    STREF	//  b1 b2 b18 b19 b26 b28
    ENDC	//  b1 b2 b18 b19 b26 _333
    SWAP	//  b1 b2 b18 b19 _333 b26
    STREF	//  b1 b2 b18 b19 b26
    ENDC	//  b1 b2 b18 b19 _335
    SWAP	//  b1 b2 b18 _335 b19
    STREF	//  b1 b2 b18 b19
    ENDC	//  b1 b2 b18 _337
    SWAP	//  b1 b2 _337 b18
    STREF	//  b1 b2 b18
    5 PUSHINT	//  b1 b2 b18 _342
    NEWC	//  b1 b2 b18 _342 _343
    4 STU	//  b1 b2 b18 b33
    49591387617142666740777108620137386668345091358566197789096065810549759 PUSHINT	//  b1 b2 b18 b33 _349
    20760302431029182743015402584813901223072450952576369674956027558658768267077 PUSHINT	//  b1 b2 b18 b33 _349 _350=20760302431029182743015402584813901223072450952576369674956027558658768267077
    75275241695103448778740028436934298220597847114351183830067357699218973961356 PUSHINT	//  b1 b2 b18 b33 _349 _350=20760302431029182743015402584813901223072450952576369674956027558658768267077 _351=75275241695103448778740028436934298220597847114351183830067357699218973961356
    82741118836260378289617490582187661697451799821299739892277150819113790539334 PUSHINT	//  b1 b2 b18 b33 _349 _350=20760302431029182743015402584813901223072450952576369674956027558658768267077 _351=75275241695103448778740028436934298220597847114351183830067357699218973961356 _352=82741118836260378289617490582187661697451799821299739892277150819113790539334
    NEWC	//  b1 b2 b18 b33 _349 _350=20760302431029182743015402584813901223072450952576369674956027558658768267077 _351=75275241695103448778740028436934298220597847114351183830067357699218973961356 _352=82741118836260378289617490582187661697451799821299739892277150819113790539334 _353
    256 STU	//  b1 b2 b18 b33 _349 _350=20760302431029182743015402584813901223072450952576369674956027558658768267077 _351=75275241695103448778740028436934298220597847114351183830067357699218973961356 _355
    256 STU	//  b1 b2 b18 b33 _349 _350=20760302431029182743015402584813901223072450952576369674956027558658768267077 _357
    256 STU	//  b1 b2 b18 b33 _349 _359
    235 STU	//  b1 b2 b18 b33 b34
    876169885641 PUSHINT	//  b1 b2 b18 b33 b34 _365
    NEWC	//  b1 b2 b18 b33 b34 _365 _366
    40 STU	//  b1 b2 b18 b33 b34 b35
    ENDC	//  b1 b2 b18 b33 b34 _369
    SWAP	//  b1 b2 b18 b33 _369 b34
    STREF	//  b1 b2 b18 b33 b34
    ENDC	//  b1 b2 b18 b33 _371
    SWAP	//  b1 b2 b18 _371 b33
    STREF	//  b1 b2 b18 b33
    5 PUSHINT	//  b1 b2 b18 b33 _376
    NEWC	//  b1 b2 b18 b33 _376 _377
    4 STU	//  b1 b2 b18 b33 b36
    201 PUSHINT	//  b1 b2 b18 b33 b36 _383
    45410639881149204999850651248731000179411374485457940568791221085971221905786 PUSHINT	//  b1 b2 b18 b33 b36 _383 _384=45410639881149204999850651248731000179411374485457940568791221085971221905786
    45410633892317834389427871766280003991829468164093042025082070436782236745740 PUSHINT	//  b1 b2 b18 b33 b36 _383 _384=45410639881149204999850651248731000179411374485457940568791221085971221905786 _385=45410633892317834389427871766280003991829468164093042025082070436782236745740
    77822998011507182909891883278063841800395320474667403251994724252324595131579 PUSHINT	//  b1 b2 b18 b33 b36 _383 _384=45410639881149204999850651248731000179411374485457940568791221085971221905786 _385=45410633892317834389427871766280003991829468164093042025082070436782236745740 _386=77822998011507182909891883278063841800395320474667403251994724252324595131579
    NEWC	//  b1 b2 b18 b33 b36 _383 _384=45410639881149204999850651248731000179411374485457940568791221085971221905786 _385=45410633892317834389427871766280003991829468164093042025082070436782236745740 _386=77822998011507182909891883278063841800395320474667403251994724252324595131579 _387
    256 STU	//  b1 b2 b18 b33 b36 _383 _384=45410639881149204999850651248731000179411374485457940568791221085971221905786 _385=45410633892317834389427871766280003991829468164093042025082070436782236745740 _389
    256 STU	//  b1 b2 b18 b33 b36 _383 _384=45410639881149204999850651248731000179411374485457940568791221085971221905786 _391
    256 STU	//  b1 b2 b18 b33 b36 _383 _393
    17 STU	//  b1 b2 b18 b33 b36 b37
    ENDC	//  b1 b2 b18 b33 b36 _396
    SWAP	//  b1 b2 b18 b33 _396 b36
    STREF	//  b1 b2 b18 b33 b36
    143186919530598925000773145086920654064079662780793930022596168905 PUSHINT	//  b1 b2 b18 b33 b36 _401
    NEWC	//  b1 b2 b18 b33 b36 _401 _402
    217 STU	//  b1 b2 b18 b33 b36 b38
    ENDC	//  b1 b2 b18 b33 b36 _405
    SWAP	//  b1 b2 b18 b33 _405 b36
    STREF	//  b1 b2 b18 b33 b36
    ENDC	//  b1 b2 b18 b33 _407
    SWAP	//  b1 b2 b18 _407 b33
    STREF	//  b1 b2 b18 b33
    ENDC	//  b1 b2 b18 _409
    SWAP	//  b1 b2 _409 b18
    STREF	//  b1 b2 b18
    ENDC	//  b1 b2 _411
    SWAP	//  b1 _411 b2
    STREF	//  b1 b2
    ENDC	//  b1 _413
    SWAP	//  _413 b1
    STREF	//  b1
    ENDC	//  _415
  }>
  get_usdq_jetton_content PROC:<{
    // 
    235629877659761281780625421800533870 PUSHINT	//  _0=235629877659761281780625421800533870
    45406873707674611466187312695969843437010076133414249170208066351564980446321 PUSHINT	//  _0=235629877659761281780625421800533870 _1=45406873707674611466187312695969843437010076133414249170208066351564980446321
    50399639963717701463601153999043190439242674004441620318968268883439683778869 PUSHINT	//  _0=235629877659761281780625421800533870 _1=45406873707674611466187312695969843437010076133414249170208066351564980446321 _2=50399639963717701463601153999043190439242674004441620318968268883439683778869
    636868685092637875018676025462067355155571762704951223135721953953328672355 PUSHINT	//  _0=235629877659761281780625421800533870 _1=45406873707674611466187312695969843437010076133414249170208066351564980446321 _2=50399639963717701463601153999043190439242674004441620318968268883439683778869 _3=636868685092637875018676025462067355155571762704951223135721953953328672355
    NEWC	//  _0=235629877659761281780625421800533870 _1=45406873707674611466187312695969843437010076133414249170208066351564980446321 _2=50399639963717701463601153999043190439242674004441620318968268883439683778869 _3=636868685092637875018676025462067355155571762704951223135721953953328672355 _4
    256 STU	//  _0=235629877659761281780625421800533870 _1=45406873707674611466187312695969843437010076133414249170208066351564980446321 _2=50399639963717701463601153999043190439242674004441620318968268883439683778869 _6
    256 STU	//  _0=235629877659761281780625421800533870 _1=45406873707674611466187312695969843437010076133414249170208066351564980446321 _8
    256 STU	//  _0=235629877659761281780625421800533870 _10
    120 STU	//  _12
    ENDC	//  _13
  }>
  get_usdq_wallet_data PROC:<{
    //  balance owner_address master_address usdq_wallet_code
    NEWC	//  balance owner_address master_address usdq_wallet_code _4
    s0 s4 XCHG2	//  usdq_wallet_code owner_address master_address _4 balance
    STVARUINT16	//  usdq_wallet_code owner_address master_address _5
    ROT	//  usdq_wallet_code master_address _5 owner_address
    STSLICER	//  usdq_wallet_code master_address _6
    SWAP	//  usdq_wallet_code _6 master_address
    STSLICER	//  usdq_wallet_code _7
    STREF	//  _8
    ENDC	//  _9
  }>
  get_usdq_wallet_state_init PROC:<{
    //  owner_address master_address usdq_wallet_code
    0 PUSHINT	//  owner_address master_address usdq_wallet_code _3=0
    s3 s2 s3 XC2PU	//  usdq_wallet_code _3=0 owner_address master_address usdq_wallet_code
    get_usdq_wallet_data INLINECALLDICT	//  usdq_wallet_code _4
    6 PUSHINT	//  usdq_wallet_code _4 _5=6
    NEWC	//  usdq_wallet_code _4 _5=6 _6
    5 STU	//  usdq_wallet_code _4 _8
    s1 s2 XCHG	//  _4 usdq_wallet_code _8
    STREF	//  _4 _9
    STREF	//  _10
    ENDC	//  _11
  }>
  get_usdq_wallet_addr PROC:<{
    //  state_init
    HASHCU	//  _1
    10 PUSHPOW2	//  _1 _2=1024
    NEWC	//  _1 _2=1024 _3
    11 STU	//  _1 _5
    256 STU	//  _7
  }>
  get_usdq_wallet_addr_from_addr PROC:<{
    //  owner_address master_address usdq_wallet_code
    10 PUSHPOW2	//  owner_address master_address usdq_wallet_code _3=1024
    NEWC	//  owner_address master_address usdq_wallet_code _3=1024 _4
    11 STU	//  owner_address master_address usdq_wallet_code _6
    s1 s3 XCHG	//  usdq_wallet_code master_address owner_address _6
    256 STU	//  usdq_wallet_code master_address _8
    ENDC	//  usdq_wallet_code master_address _9
    CTOS	//  usdq_wallet_code master_address _10
    s0 s2 XCHG	//  _10 master_address usdq_wallet_code
    get_usdq_wallet_state_init INLINECALLDICT	//  _11
    get_usdq_wallet_addr INLINECALLDICT	//  _12
  }>
  build_usdq_wallet_master_msg_incoming PROC:<{
    //  addr nusdq_amount usdq_wallet_code master_address
    10 PUSHPOW2	//  addr nusdq_amount usdq_wallet_code master_address _5=1024
    NEWC	//  addr nusdq_amount usdq_wallet_code master_address _5=1024 _6
    11 STU	//  addr nusdq_amount usdq_wallet_code master_address _8
    s1 s4 XCHG	//  master_address nusdq_amount usdq_wallet_code addr _8
    256 STU	//  master_address nusdq_amount usdq_wallet_code _10
    ENDC	//  master_address nusdq_amount usdq_wallet_code _11
    CTOS	//  master_address nusdq_amount usdq_wallet_code _12
    s0 s3 s3 XCHG3	//  nusdq_amount _12 master_address usdq_wallet_code
    get_usdq_wallet_state_init INLINECALLDICT	//  nusdq_amount state_init
    NEWDICT	//  nusdq_amount state_init _14
    0 PUSHINT	//  nusdq_amount state_init _14 _15=0
    64 PUSHPOW2	//  nusdq_amount state_init _14 _15=0 _18
    RAND	//  nusdq_amount state_init _14 _15=0 _19
    395134233 PUSHINT	//  nusdq_amount state_init _14 _15=0 _19 _20=395134233
    6 PUSHINT	//  nusdq_amount state_init _14 _15=0 _19 _20=395134233 _21=6
    s5 PUSH	//  nusdq_amount state_init _14 _15=0 _19 _20=395134233 _21=6 state_init
    get_usdq_wallet_addr INLINECALLDICT	//  nusdq_amount state_init _14 _15=0 _19 _20=395134233 _21=6 _22
    24 PUSHINT	//  nusdq_amount state_init _14 _15=0 _19 _20=395134233 _21=6 _22 _23=24
    NEWC	//  nusdq_amount state_init _14 _15=0 _19 _20=395134233 _21=6 _22 _23=24 _24
    6 STU	//  nusdq_amount state_init _14 _15=0 _19 _20=395134233 _21=6 _22 _26
    STB	//  nusdq_amount state_init _14 _15=0 _19 _20=395134233 _21=6 _27
    10000000 PUSHINT	//  nusdq_amount state_init _14 _15=0 _19 _20=395134233 _21=6 _27 _28=10000000
    STVARUINT16	//  nusdq_amount state_init _14 _15=0 _19 _20=395134233 _21=6 _29
    108 STU	//  nusdq_amount state_init _14 _15=0 _19 _20=395134233 _43
    s1 s5 XCHG	//  nusdq_amount _20=395134233 _14 _15=0 _19 state_init _43
    STREF	//  nusdq_amount _20=395134233 _14 _15=0 _19 _44
    s1 s4 XCHG	//  nusdq_amount _19 _14 _15=0 _20=395134233 _44
    32 STU	//  nusdq_amount _19 _14 _15=0 _46
    s1 s3 XCHG	//  nusdq_amount _15=0 _14 _19 _46
    64 STU	//  nusdq_amount _15=0 _14 _48
    s0 s3 XCHG2	//  _14 _15=0 _48 nusdq_amount
    STVARUINT16	//  _14 _15=0 _49
    4 STU	//  _14 _51
    0 PUSHINT	//  _14 _51 _52=0
    STVARUINT16	//  _14 _53
    STDICT	//  _54
    ENDC	//  _55
  }>
  build_usdq_wallet_msg_body_incoming PROC:<{
    //  query_id nusdq_amount from_owner_addr response_addr forward_ton_amount either_forward_payload
    395134233 PUSHINT	//  query_id nusdq_amount from_owner_addr response_addr forward_ton_amount either_forward_payload _6=395134233
    NEWC	//  query_id nusdq_amount from_owner_addr response_addr forward_ton_amount either_forward_payload _6=395134233 _7
    32 STU	//  query_id nusdq_amount from_owner_addr response_addr forward_ton_amount either_forward_payload _9
    s1 s6 XCHG	//  either_forward_payload nusdq_amount from_owner_addr response_addr forward_ton_amount query_id _9
    64 STU	//  either_forward_payload nusdq_amount from_owner_addr response_addr forward_ton_amount _11
    s0 s4 XCHG2	//  either_forward_payload forward_ton_amount from_owner_addr response_addr _11 nusdq_amount
    STVARUINT16	//  either_forward_payload forward_ton_amount from_owner_addr response_addr _12
    ROT	//  either_forward_payload forward_ton_amount response_addr _12 from_owner_addr
    STSLICER	//  either_forward_payload forward_ton_amount response_addr _13
    SWAP	//  either_forward_payload forward_ton_amount _13 response_addr
    STSLICER	//  either_forward_payload forward_ton_amount _14
    SWAP	//  either_forward_payload _14 forward_ton_amount
    STVARUINT16	//  either_forward_payload _15
    SWAP	//  _15 either_forward_payload
    STSLICER	//  _16
  }>
  i_init_contract PROC:<{
    // 
    113777 PUSHINT	//  _1=113777
    NIL	//  _1=113777 _2
    NEWC	//  _1=113777 _2 _3
    ENDC	//  _1=113777 _2 _4
    get_c7 INLINECALLDICT	//  _1=113777 _2 _4 _5
    PUSHNULL	//  _1=113777 _2 _4 _5 _6
    5 TUPLE	//  _0
  }>
  c_init_contract PROC:<{
    //  exit_code data stack actions gas
    4 BLKDROP	//  exit_code
    200 PUSHINT	//  exit_code _5=200
    OVER	//  exit_code _5=200 exit_code
    ADD	//  exit_code _6
    SWAP	//  _6 exit_code
    0 NEQINT	//  _6 _8
    THROWANYIF
  }>
  i_empty_msg PROC:<{
    // 
    NIL	//  stack
    0 PUSHINT	//  stack _3=0
    TPUSH	//  stack
    0 PUSHINT	//  stack _6=0
    24 PUSHINT	//  stack _6=0 _7=24
    NEWC	//  stack _6=0 _7=24 _8
    6 STU	//  stack _6=0 _10
    2 STU	//  stack _12
    ENDC	//  stack _13
    TPUSH	//  stack
    NEWC	//  stack _16
    ENDC	//  stack _17
    CTOS	//  stack _18
    TPUSH	//  stack
    0 PUSHINT	//  stack _21=0
    10 GETPARAM UNPAIR DROP	//  stack _21=0 _22
    get_c7 INLINECALLDICT	//  stack _21=0 _22 _23
    s2 s3 XCHG
    PUSHNULL	//  _21=0 stack _22 _23 _24
    5 TUPLE	//  _20
  }>
  c_empty_msg PROC:<{
    //  exit_code data stack actions gas
    4 BLKDROP	//  exit_code
    200 PUSHINT	//  exit_code _5=200
    OVER	//  exit_code _5=200 exit_code
    ADD	//  exit_code _6
    SWAP	//  _6 exit_code
    0 NEQINT	//  _6 _8
    THROWANYIF
  }>
  i_donation PROC:<{
    // 
    NIL	//  stack
    10000 PUSHINT	//  stack _3=10000
    TPUSH	//  stack
    0 PUSHINT	//  stack _6=0
    6 PUSHINT	//  stack _6=0 _7=6
    NEWC	//  stack _6=0 _7=6 _8
    4 STU	//  stack _6=0 _10
    MYADDR	//  stack _6=0 _10 _11
    STSLICER	//  stack _6=0 _12
    2 STU	//  stack _14
    ENDC	//  stack _15
    TPUSH	//  stack
    0 PUSHINT	//  stack _18=0
    NEWC	//  stack _18=0 _19
    32 STU	//  stack _21
    ENDC	//  stack _22
    CTOS	//  stack _23
    TPUSH	//  stack
    0 PUSHINT	//  stack _26=0
    10 GETPARAM UNPAIR DROP	//  stack _26=0 _27
    get_c7 INLINECALLDICT	//  stack _26=0 _27 _28
    s2 s3 XCHG
    PUSHNULL	//  _26=0 stack _27 _28 _29
    5 TUPLE	//  _25
  }>
  c_donation PROC:<{
    //  exit_code data stack actions gas
    4 BLKDROP	//  exit_code
    200 PUSHINT	//  exit_code _5=200
    OVER	//  exit_code _5=200 exit_code
    ADD	//  exit_code _6
    SWAP	//  _6 exit_code
    0 NEQINT	//  _6 _8
    THROWANYIF
  }>
  i_no_return_no_ton PROC:<{
    // 
    NIL	//  stack
    0 PUSHINT	//  stack _3=0
    TPUSH	//  stack
    0 PUSHINT	//  stack _6=0
    6 PUSHINT	//  stack _6=0 _7=6
    NEWC	//  stack _6=0 _7=6 _8
    4 STU	//  stack _6=0 _10
    MYADDR	//  stack _6=0 _10 _11
    STSLICER	//  stack _6=0 _12
    2 STU	//  stack _14
    ENDC	//  stack _15
    TPUSH	//  stack
    10000 PUSHINT	//  stack _18=10000
    3 PUSHINT	//  stack _18=10000 _19=3
    NEWC	//  stack _18=10000 _19=3 _20
    32 STU	//  stack _18=10000 _22
    64 STU	//  stack _24
    ENDC	//  stack _25
    CTOS	//  stack _26
    TPUSH	//  stack
    0 PUSHINT	//  stack _29=0
    10 GETPARAM UNPAIR DROP	//  stack _29=0 _30
    get_c7 INLINECALLDICT	//  stack _29=0 _30 _31
    s2 s3 XCHG
    PUSHNULL	//  _29=0 stack _30 _31 _32
    5 TUPLE	//  _28
  }>
  c_no_return_no_ton PROC:<{
    //  exit_code data stack actions gas
    4 BLKDROP	//  exit_code
    0 EQINT	//  _7
    100 THROWIF
  }>
  i_put_ton PROC:<{
    // 
    NIL	//  stack
    10000 PUSHINT	//  stack _3=10000
    TPUSH	//  stack
    0 PUSHINT	//  stack _6=0
    6 PUSHINT	//  stack _6=0 _7=6
    NEWC	//  stack _6=0 _7=6 _8
    4 STU	//  stack _6=0 _10
    MYADDR	//  stack _6=0 _10 _11
    STSLICER	//  stack _6=0 _12
    2 STU	//  stack _14
    ENDC	//  stack _15
    TPUSH	//  stack
    1 PUSHINT	//  stack _18=1
    NEWC	//  stack _18=1 _19
    32 STU	//  stack _21
    ENDC	//  stack _22
    CTOS	//  stack _23
    TPUSH	//  stack
    0 PUSHINT	//  stack _26=0
    10 GETPARAM UNPAIR DROP	//  stack _26=0 _27
    get_c7 INLINECALLDICT	//  stack _26=0 _27 _28
    s2 s3 XCHG
    PUSHNULL	//  _26=0 stack _27 _28 _29
    5 TUPLE	//  _25
  }>
  c_put_ton PROC:<{
    //  exit_code data stack actions gas
    4 BLKDROP	//  exit_code
    200 PUSHINT	//  exit_code _5=200
    OVER	//  exit_code _5=200 exit_code
    ADD	//  exit_code _6
    SWAP	//  _6 exit_code
    0 NEQINT	//  _6 _8
    THROWANYIF
  }>
  i_full_return_ton PROC:<{
    // 
    NIL	//  stack
    0 PUSHINT	//  stack _3=0
    TPUSH	//  stack
    0 PUSHINT	//  stack _6=0
    6 PUSHINT	//  stack _6=0 _7=6
    NEWC	//  stack _6=0 _7=6 _8
    4 STU	//  stack _6=0 _10
    MYADDR	//  stack _6=0 _10 _11
    STSLICER	//  stack _6=0 _12
    2 STU	//  stack _14
    ENDC	//  stack _15
    TPUSH	//  stack
    9999 PUSHINT	//  stack _18=9999
    3 PUSHINT	//  stack _18=9999 _19=3
    NEWC	//  stack _18=9999 _19=3 _20
    32 STU	//  stack _18=9999 _22
    64 STU	//  stack _24
    ENDC	//  stack _25
    CTOS	//  stack _26
    TPUSH	//  stack
    0 PUSHINT	//  stack _29=0
    10 GETPARAM UNPAIR DROP	//  stack _29=0 _30
    get_c7 INLINECALLDICT	//  stack _29=0 _30 _31
    s2 s3 XCHG
    PUSHNULL	//  _29=0 stack _30 _31 _32
    5 TUPLE	//  _28
  }>
  c_full_return_ton PROC:<{
    //  exit_code data stack actions gas
    s1 s3 XCHG
    3 BLKDROP	//  exit_code actions
    200 PUSHINT	//  exit_code actions _5=200
    s2 PUSH	//  exit_code actions _5=200 exit_code
    ADD	//  exit_code actions _6
    s0 s2 XCHG	//  _6 actions exit_code
    0 NEQINT	//  _6 actions _8
    s1 s2 XCHG	//  actions _6 _8
    THROWANYIF
    CTOS	//  actions
    parse_one_action CALLDICT	//  _13
    DROP	// 
  }>
  i_put_ton_2 PROC:<{
    // 
    NIL	//  stack
    100000 PUSHINT	//  stack _3=100000
    TPUSH	//  stack
    0 PUSHINT	//  stack _6=0
    6 PUSHINT	//  stack _6=0 _7=6
    NEWC	//  stack _6=0 _7=6 _8
    4 STU	//  stack _6=0 _10
    MYADDR	//  stack _6=0 _10 _11
    STSLICER	//  stack _6=0 _12
    2 STU	//  stack _14
    ENDC	//  stack _15
    TPUSH	//  stack
    1 PUSHINT	//  stack _18=1
    NEWC	//  stack _18=1 _19
    32 STU	//  stack _21
    ENDC	//  stack _22
    CTOS	//  stack _23
    TPUSH	//  stack
    0 PUSHINT	//  stack _26=0
    10 GETPARAM UNPAIR DROP	//  stack _26=0 _27
    get_c7 INLINECALLDICT	//  stack _26=0 _27 _28
    s2 s3 XCHG
    PUSHNULL	//  _26=0 stack _27 _28 _29
    5 TUPLE	//  _25
  }>
  c_put_ton_2 PROC:<{
    //  exit_code data stack actions gas
    4 BLKDROP	//  exit_code
    200 PUSHINT	//  exit_code _5=200
    OVER	//  exit_code _5=200 exit_code
    ADD	//  exit_code _6
    SWAP	//  _6 exit_code
    0 NEQINT	//  _6 _8
    THROWANYIF
  }>
  i_lend_usdq PROC:<{
    // 
    NIL	//  stack
    0 PUSHINT	//  stack _3=0
    TPUSH	//  stack
    0 PUSHINT	//  stack _6=0
    6 PUSHINT	//  stack _6=0 _7=6
    NEWC	//  stack _6=0 _7=6 _8
    4 STU	//  stack _6=0 _10
    MYADDR	//  stack _6=0 _10 _11
    STSLICER	//  stack _6=0 _12
    2 STU	//  stack _14
    ENDC	//  stack _15
    TPUSH	//  stack
    106956 PUSHINT	//  stack _18=106956
    2 PUSHINT	//  stack _18=106956 _19=2
    NEWC	//  stack _18=106956 _19=2 _20
    32 STU	//  stack _18=106956 _22
    64 STU	//  stack _24
    ENDC	//  stack _25
    CTOS	//  stack _26
    TPUSH	//  stack
    0 PUSHINT	//  stack _29=0
    10 GETPARAM UNPAIR DROP	//  stack _29=0 _30
    get_c7 INLINECALLDICT	//  stack _29=0 _30 _31
    s2 s3 XCHG
    PUSHNULL	//  _29=0 stack _30 _31 _32
    5 TUPLE	//  _28
  }>
  c_lend_usdq PROC:<{
    //  exit_code data stack actions gas
    s1 s3 XCHG
    3 BLKDROP	//  exit_code actions
    200 PUSHINT	//  exit_code actions _5=200
    s2 PUSH	//  exit_code actions _5=200 exit_code
    ADD	//  exit_code actions _6
    s0 s2 XCHG	//  _6 actions exit_code
    0 NEQINT	//  _6 actions _8
    s1 s2 XCHG	//  actions _6 _8
    THROWANYIF
    CTOS	//  actions
    parse_one_action CALLDICT	//  _13
    DROP	// 
  }>
  i_no_return_ton_when_lending PROC:<{
    // 
    NIL	//  stack
    0 PUSHINT	//  stack _3=0
    TPUSH	//  stack
    0 PUSHINT	//  stack _6=0
    6 PUSHINT	//  stack _6=0 _7=6
    NEWC	//  stack _6=0 _7=6 _8
    4 STU	//  stack _6=0 _10
    MYADDR	//  stack _6=0 _10 _11
    STSLICER	//  stack _6=0 _12
    2 STU	//  stack _14
    ENDC	//  stack _15
    TPUSH	//  stack
    2 PUSHINT	//  stack _18=2
    3 PUSHINT	//  stack _18=2 _19=3
    NEWC	//  stack _18=2 _19=3 _20
    32 STU	//  stack _18=2 _22
    64 STU	//  stack _24
    ENDC	//  stack _25
    CTOS	//  stack _26
    TPUSH	//  stack
    0 PUSHINT	//  stack _29=0
    10 GETPARAM UNPAIR DROP	//  stack _29=0 _30
    get_c7 INLINECALLDICT	//  stack _29=0 _30 _31
    s2 s3 XCHG
    PUSHNULL	//  _29=0 stack _30 _31 _32
    5 TUPLE	//  _28
  }>
  c_no_return_ton_when_lending PROC:<{
    //  exit_code data stack actions gas
    4 BLKDROP	//  exit_code
    0 EQINT	//  _7
    100 THROWIF
  }>
  i_no_increase_lending PROC:<{
    // 
    NIL	//  stack
    0 PUSHINT	//  stack _3=0
    TPUSH	//  stack
    0 PUSHINT	//  stack _6=0
    6 PUSHINT	//  stack _6=0 _7=6
    NEWC	//  stack _6=0 _7=6 _8
    4 STU	//  stack _6=0 _10
    MYADDR	//  stack _6=0 _10 _11
    STSLICER	//  stack _6=0 _12
    2 STU	//  stack _14
    ENDC	//  stack _15
    TPUSH	//  stack
    2 PUSHINT	//  stack _18=2
    DUP	//  stack _18=2 _19=2
    NEWC	//  stack _18=2 _19=2 _20
    32 STU	//  stack _18=2 _22
    64 STU	//  stack _24
    ENDC	//  stack _25
    CTOS	//  stack _26
    TPUSH	//  stack
    0 PUSHINT	//  stack _29=0
    10 GETPARAM UNPAIR DROP	//  stack _29=0 _30
    get_c7 INLINECALLDICT	//  stack _29=0 _30 _31
    s2 s3 XCHG
    PUSHNULL	//  _29=0 stack _30 _31 _32
    5 TUPLE	//  _28
  }>
  c_no_increase_lending PROC:<{
    //  exit_code data stack actions gas
    4 BLKDROP	//  exit_code
    0 EQINT	//  _7
    100 THROWIF
  }>
  i_return_usdq PROC:<{
    // 
    NIL	//  stack
    0 PUSHINT	//  stack _3=0
    TPUSH	//  stack
    0 PUSHINT	//  stack _6=0
    MYADDR	//  stack _6=0 _7
    MYADDR	//  stack _6=0 _7 _8
    get_usdq_wallet_code CALLDICT	//  stack _6=0 _7 _8 _9
    get_usdq_wallet_state_init INLINECALLDICT	//  stack _6=0 _10
    get_usdq_wallet_addr INLINECALLDICT	//  stack _6=0 _11
    6 PUSHINT	//  stack _6=0 _11 _12=6
    NEWC	//  stack _6=0 _11 _12=6 _13
    4 STU	//  stack _6=0 _11 _15
    STB	//  stack _6=0 _16
    2 STU	//  stack _18
    ENDC	//  stack _19
    TPUSH	//  stack
    0 PUSHINT	//  stack _22=0
    2078119902 PUSHINT	//  stack _22=0 _23=2078119902
    NEWC	//  stack _22=0 _23=2078119902 _24
    32 STU	//  stack _22=0 _26
    64 STU	//  stack _28
    106956 PUSHINT	//  stack _28 _29=106956
    STVARUINT16	//  stack _30
    MYADDR	//  stack _30 _31
    STSLICER	//  stack _32
    MYADDR	//  stack _32 _33
    STSLICER	//  stack _34
    ENDC	//  stack _35
    CTOS	//  stack _36
    TPUSH	//  stack
    0 PUSHINT	//  stack _39=0
    10 GETPARAM UNPAIR DROP	//  stack _39=0 _40
    get_c7 INLINECALLDICT	//  stack _39=0 _40 _41
    s2 s3 XCHG
    PUSHNULL	//  _39=0 stack _40 _41 _42
    5 TUPLE	//  _38
  }>
  c_return_usdq PROC:<{
    //  exit_code data stack actions gas
    4 BLKDROP	//  exit_code
    200 PUSHINT	//  exit_code _5=200
    OVER	//  exit_code _5=200 exit_code
    ADD	//  exit_code _6
    SWAP	//  _6 exit_code
    0 NEQINT	//  _6 _8
    THROWANYIF
  }>
  i_return_ton_after_lending PROC:<{
    // 
    NIL	//  stack
    0 PUSHINT	//  stack _3=0
    TPUSH	//  stack
    0 PUSHINT	//  stack _6=0
    6 PUSHINT	//  stack _6=0 _7=6
    NEWC	//  stack _6=0 _7=6 _8
    4 STU	//  stack _6=0 _10
    MYADDR	//  stack _6=0 _10 _11
    STSLICER	//  stack _6=0 _12
    2 STU	//  stack _14
    ENDC	//  stack _15
    TPUSH	//  stack
    100000 PUSHINT	//  stack _18=100000
    3 PUSHINT	//  stack _18=100000 _19=3
    NEWC	//  stack _18=100000 _19=3 _20
    32 STU	//  stack _18=100000 _22
    64 STU	//  stack _24
    ENDC	//  stack _25
    CTOS	//  stack _26
    TPUSH	//  stack
    0 PUSHINT	//  stack _29=0
    10 GETPARAM UNPAIR DROP	//  stack _29=0 _30
    get_c7 INLINECALLDICT	//  stack _29=0 _30 _31
    s2 s3 XCHG
    PUSHNULL	//  _29=0 stack _30 _31 _32
    5 TUPLE	//  _28
  }>
  c_return_ton_after_lending PROC:<{
    //  exit_code data stack actions gas
    s1 s3 XCHG
    3 BLKDROP	//  exit_code actions
    200 PUSHINT	//  exit_code actions _5=200
    s2 PUSH	//  exit_code actions _5=200 exit_code
    ADD	//  exit_code actions _6
    s0 s2 XCHG	//  _6 actions exit_code
    0 NEQINT	//  _6 actions _8
    s1 s2 XCHG	//  actions _6 _8
    THROWANYIF
    CTOS	//  actions
    parse_one_action CALLDICT	//  _13
    DROP	// 
  }>
  i_get_wallet_code PROC:<{
    // 
    71217 PUSHINT	//  _1=71217
    NIL	//  _1=71217 _2
    10 GETPARAM UNPAIR DROP	//  _1=71217 _2 _3
    get_c7 INLINECALLDICT	//  _1=71217 _2 _3 _4
    PUSHNULL	//  _1=71217 _2 _3 _4 _5
    5 TUPLE	//  _0
  }>
  c_get_wallet_code PROC:<{
    //  exit_code data stack actions gas
    4 BLKDROP	//  exit_code
    200 PUSHINT	//  exit_code _5=200
    OVER	//  exit_code _5=200 exit_code
    ADD	//  exit_code _6
    SWAP	//  _6 exit_code
    0 NEQINT	//  _6 _8
    THROWANYIF
  }>
  i_get_wallet_addr PROC:<{
    // 
    NIL	//  stack
    MYADDR	//  stack _3
    TPUSH	//  stack
    103289 PUSHINT	//  stack _6=103289
    10 GETPARAM UNPAIR DROP	//  stack _6=103289 _7
    get_c7 INLINECALLDICT	//  stack _6=103289 _7 _8
    s2 s3 XCHG
    PUSHNULL	//  _6=103289 stack _7 _8 _9
    5 TUPLE	//  _5
  }>
  c_get_wallet_addr PROC:<{
    //  exit_code data stack actions gas
    s2 s3 XCHG
    3 BLKDROP	//  exit_code stack
    200 PUSHINT	//  exit_code stack _5=200
    s2 PUSH	//  exit_code stack _5=200 exit_code
    ADD	//  exit_code stack _6
    s0 s2 XCHG	//  _6 stack exit_code
    0 NEQINT	//  _6 stack _8
    s1 s2 XCHG	//  stack _6 _8
    THROWANYIF
    FIRST	//  _12
    REWRITESTDADDR	//  wid addr
    SWAP	//  addr wid
    s0 DUMP	//  addr _15
    DROP	//  addr
    s0 DUMP	//  _17
    DROP	// 
  }>
}END>c
